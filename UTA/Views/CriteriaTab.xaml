<UserControl x:Class="UTA.Views.CriteriaTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:criterion="clr-namespace:DataModel.Input;assembly=DataModel"
             xmlns:validation="clr-namespace:UTA.Helpers.DataValidation"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             d:DesignHeight="700" d:DesignWidth="900" Unloaded="TabUnloaded">
  <Grid Margin="12,8,12,12" Background="{StaticResource ColorInterface7}">
    <Grid.Resources>
      <CollectionViewSource x:Key="CriteriaCollectionViewSource"
                            Source="{Binding Criteria.CriteriaCollection, UpdateSourceTrigger=PropertyChanged}" />
    </Grid.Resources>

    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <StackPanel>
      <TextBlock Text="Add Criterion" FontSize="{StaticResource CommonFontSize1}" Margin="0,0,0,8" />

      <StackPanel Name="AddCriterionContainer"
                  DataContext="{Binding NewCriterion, UpdateSourceTrigger=PropertyChanged}"
                  Margin="0,0,0,12" Validation.ErrorTemplate="{x:Null}">
        <StackPanel.BindingGroup>
          <BindingGroup />
        </StackPanel.BindingGroup>

        <i:Interaction.Triggers>
          <i:KeyTrigger Key="Enter" FiredOn="KeyUp">
            <i:InvokeCommandAction
              Command="{Binding ElementName=CriteriaDataGrid, Path=DataContext.AddCriterionCommand}"
              CommandParameter="{Binding ElementName=AddCriterionContainer, Path=BindingGroup}" />
          </i:KeyTrigger>
        </i:Interaction.Triggers>

        <StackPanel Orientation="Horizontal" Margin="0,0,0,6">
          <StackPanel.Resources>
            <Style TargetType="{x:Type StackPanel}">
              <Setter Property="Margin" Value="0,0,12,0" />
            </Style>
          </StackPanel.Resources>

          <StackPanel MinWidth="200">
            <TextBlock Text="Name" Margin="0,0,0,2" />
            <TextBox Name="NameTextBox" TextChanged="NameTextBoxTextChanged">
              <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                  <validation:CriterionNameValidationRule
                    CriteriaCollectionViewSource="{StaticResource CriteriaCollectionViewSource}"
                    ValidationStep="RawProposedValue" />
                </Binding.ValidationRules>
              </Binding>
            </TextBox>
          </StackPanel>

          <StackPanel Width="100">
            <TextBlock Text="Type" Margin="0,0,0,2" />
            <ComboBox ItemsSource="{Binding CriterionDirectionTypesList}"
                      SelectedItem="{Binding CriterionDirection, UpdateSourceTrigger=PropertyChanged}" />
          </StackPanel>

          <StackPanel Width="100">
            <TextBlock Text="Linear Segments" Margin="0,0,0,2" />
            <controls:NumericUpDown Value="{Binding LinearSegments, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Minimum="{x:Static criterion:Criterion.MinNumberOfLinearSegments}"
                                    Maximum="{x:Static criterion:Criterion.MaxNumberOfLinearSegments}"
                                    NumericInputMode="Numbers" />
          </StackPanel>
        </StackPanel>

        <StackPanel>
          <TextBlock Text="Description" Margin="0,0,0,2" />
          <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" MinWidth="424"
                   HorizontalAlignment="Left" />
        </StackPanel>
      </StackPanel>

      <Border Margin="0,0,0,16">
        <Button Name="AddButton" Content="Add Criterion"
                Style="{StaticResource PrimaryRoundButton}" MinWidth="424" HorizontalAlignment="Left"
                Command="{Binding ElementName=CriteriaDataGrid, Path=DataContext.AddCriterionCommand}"
                CommandParameter="{Binding ElementName=AddCriterionContainer, Path=BindingGroup}" />
      </Border>

      <TextBlock Text="Criteria Editor" FontSize="{StaticResource CommonFontSize1}" Margin="0,0,0,4" />
    </StackPanel>


    <DataGrid Name="CriteriaDataGrid" Grid.Row="1"
              ItemsSource="{Binding Criteria.CriteriaCollection, UpdateSourceTrigger=PropertyChanged}"
              AutoGenerateColumns="False" SelectionMode="Single" EnableRowVirtualization="True"
              BorderBrush="{StaticResource ColorBorders1}" BorderThickness="1" IsReadOnly="True"
              EnableColumnVirtualization="True"
              CanUserAddRows="False" CanUserReorderColumns="False" CanUserResizeRows="False"
              IsSynchronizedWithCurrentItem="True" HorizontalGridLinesBrush="{StaticResource ColorInterface2}"
              VerticalGridLinesBrush="{StaticResource ColorInterface2}"
              PreviewKeyDown="CriteriaDataGridPreviewKeyDown" LoadingRowDetails="DataGridRowClicked"
              GridLinesVisibility="All">
      <DataGrid.RowStyle>
        <Style TargetType="{x:Type DataGridRow}">
          <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{StaticResource ColorInterface6}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="{StaticResource ColorInterface6}" />
            </Trigger>
          </Style.Triggers>
          <Setter Property="Background" Value="White" />
        </Style>
      </DataGrid.RowStyle>

      <DataGrid.RowDetailsTemplate>
        <DataTemplate>
          <StackPanel Orientation="Horizontal" DataContext="{Binding}" Margin="34,8,12,8">
            <StackPanel.Resources>
              <Style TargetType="{x:Type StackPanel}">
                <Setter Property="Margin" Value="0,0,12,0" />
              </Style>
            </StackPanel.Resources>

            <StackPanel MinWidth="150">
              <TextBlock Text="Name" Margin="0,0,0,2" />
              <TextBox>
                <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                  <Binding.ValidationRules>
                    <validation:CriterionNameValidationRule
                      CriteriaCollectionViewSource="{StaticResource CriteriaCollectionViewSource}"
                      ValidationStep="RawProposedValue" />
                  </Binding.ValidationRules>
                </Binding>
              </TextBox>
            </StackPanel>

            <StackPanel MinWidth="80">
              <TextBlock Text="Type" Margin="0,0,0,2" />
              <ComboBox ItemsSource="{Binding CriterionDirectionTypesList}"
                        SelectedItem="{Binding CriterionDirection, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>

            <StackPanel MinWidth="100">
              <TextBlock Text="Linear Segments" Margin="0,0,0,2" />
              <controls:NumericUpDown
                Value="{Binding LinearSegments, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                Minimum="{x:Static criterion:Criterion.MinNumberOfLinearSegments}"
                Maximum="{x:Static criterion:Criterion.MaxNumberOfLinearSegments}"
                NumericInputMode="Numbers" />
            </StackPanel>

            <StackPanel MinWidth="150">
              <TextBlock Text="Description" Margin="0,0,0,2" />
              <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </StackPanel>
        </DataTemplate>
      </DataGrid.RowDetailsTemplate>

      <DataGrid.Columns>
        <DataGridTemplateColumn CanUserResize="False">
          <DataGridTemplateColumn.CellTemplate>
            <ItemContainerTemplate>
              <Button Command="{Binding ElementName=CriteriaDataGrid, Path=DataContext.RemoveCriterionCommand}"
                      CommandParameter="{Binding}" Template="{StaticResource RemoveButton}">
                <i:Interaction.Triggers>
                  <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <i:InvokeCommandAction
                      Command="{Binding ElementName=CriteriaDataGrid, Path=DataContext.RemoveCriterionCommand}"
                      CommandParameter="{Binding}" />
                  </i:EventTrigger>
                </i:Interaction.Triggers>
              </Button>
            </ItemContainerTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

        <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                            CellStyle="{StaticResource LeftSidedDataGridCell}" MinWidth="150" />
        <DataGridTextColumn Header="Type" Binding="{Binding CriterionDirection, UpdateSourceTrigger=PropertyChanged}"
                            CellStyle="{StaticResource CenteredDataGridCell}"
                            HeaderStyle="{StaticResource CenteredDataGridColumnHeader}" />
        <DataGridTextColumn Header="Linear Segments"
                            CellStyle="{StaticResource CenteredDataGridCell}"
                            HeaderStyle="{StaticResource CenteredDataGridColumnHeader}"
                            Binding="{Binding LinearSegments, UpdateSourceTrigger=PropertyChanged}" />
        <DataGridTextColumn Header="Description" Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                            CellStyle="{StaticResource LeftSidedDataGridCell}" />
      </DataGrid.Columns>
    </DataGrid>
  </Grid>
</UserControl>