<controls:MetroWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:sys="clr-namespace:System;assembly=mscorlib"
                      xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      dialog:DialogParticipation.Register="{Binding}"
                      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                      xmlns:icons="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Material"
                      xmlns:viewModels="clr-namespace:UTA.ViewModels"
                      xmlns:views="clr-namespace:UTA.Views"
                      xmlns:tabModel="clr-namespace:UTA.Models.Tab"
                      x:Class="UTA.Views.MainView" mc:Ignorable="d"
                      d:DataContext="{d:DesignInstance viewModels:MainViewModel}" Title="UTA Extended" WindowState="Maximized"
                      Width="1250" Height="700" MinWidth="850" MinHeight="600" Left="12" Top="12"
                      Closing="ApplicationClosing">
  <controls:MetroWindow.Resources>
    <!--values-->
    <sys:Double x:Key="ExpanderHeaderHeight">26</sys:Double>

    <!--keyed templates-->
    <ItemContainerTemplate x:Key="ExpanderPlainHeaderTemplate">
      <Grid Height="{StaticResource ExpanderHeaderHeight}">
        <TextBlock Text="{TemplateBinding Content}" FontSize="{StaticResource CommonFontSize2}" FontWeight="Medium"
                   VerticalAlignment="Center" Foreground="{StaticResource ColorFontDark}" />
      </Grid>
    </ItemContainerTemplate>

    <ItemContainerTemplate x:Key="ExpanderWithPlusButtonHeaderTemplate">
      <DockPanel
        DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type controls:MetroWindow}}}"
        Name="ExpanderWrapper" LastChildFill="False" Height="{StaticResource ExpanderHeaderHeight}">
        <TextBlock Text="{TemplateBinding Content}" DockPanel.Dock="Left" FontSize="{StaticResource CommonFontSize2}"
                   VerticalAlignment="Center" Foreground="{StaticResource ColorFontDark}" FontWeight="Medium" />
        <Button DockPanel.Dock="Right" Margin="0,0,4,0" Template="{StaticResource TransparentButtonTemplateInterface2}"
                Click="InstancePanelAddButtonClicked">
          <icons:PackIconMaterial Kind="Plus" Width="10" Height="10" Foreground="{StaticResource ColorFontDark}" />
        </Button>
      </DockPanel>
    </ItemContainerTemplate>

    <Style x:Key="ExpanderChevronDownStyle" TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Grid x:Name="Wrapper" Background="{StaticResource ColorInterface4}" Margin="0,0,0,2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <icons:PackIconMaterial x:Name="Arrow" Kind="ChevronRight" Margin="9,0,0,0" Width="10" Height="10"
                                      Foreground="{StaticResource ColorFontDark}" VerticalAlignment="Center" />
              <ContentPresenter Margin="8,0,0,0" Grid.Column="1" />
            </Grid>

            <ControlTemplate.Triggers>
              <Trigger Property="IsChecked" Value="True">
                <Setter Property="Kind" TargetName="Arrow" Value="ChevronDown" />
              </Trigger>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Wrapper" Value="{StaticResource ColorInterface4Hover}" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>


    <!--overriding styles-->
    <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource MetroExpander}">
      <Setter Property="controls:ExpanderHelper.HeaderDownStyle" Value="{StaticResource ExpanderChevronDownStyle}" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Padding" Value="0" />
      <Setter Property="Margin" Value="0,0,0,2" />
    </Style>
  </controls:MetroWindow.Resources>


  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="22" />
      <RowDefinition />
    </Grid.RowDefinitions>

    <!--menu bar-->
    <Menu FontSize="12" BorderThickness="0,0,0,1" BorderBrush="{StaticResource ColorBorders1}">
      <Menu.Resources>
        <Thickness x:Key="MenuItemTopMargin" Top="4" />
        <Thickness x:Key="MenuItemBottomMargin" Bottom="4" />

        <Style x:Key="MenuBarItem" TargetType="{x:Type MenuItem}">
          <Setter Property="Padding" Value="8,3" />
        </Style>

        <Style TargetType="{x:Type MenuItem}">
          <Setter Property="Padding" Value="0,4" />
        </Style>
      </Menu.Resources>

      <MenuItem Header="File" Style="{StaticResource MenuBarItem}">
        <MenuItem Margin="{StaticResource MenuItemTopMargin}" Header="New">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:CallMethodAction TargetObject="{Binding}" MethodName="NewSolution" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <Separator />
        <MenuItem Header="Open File">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:CallMethodAction TargetObject="{Binding}" MethodName="OpenFileMenuItemClicked" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <MenuItem Header="Open XMCDA Directory">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:CallMethodAction TargetObject="{Binding}" MethodName="OpenXMCDAMenuItemClicked" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <Separator />
        <MenuItem Header="Save"
                  IsEnabled="{Binding IsThereAnyApplicationProgress, UpdateSourceTrigger=PropertyChanged}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:CallMethodAction TargetObject="{Binding}" MethodName="SaveMenuItemClicked" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <MenuItem Header="Save As..."
                  IsEnabled="{Binding IsThereAnyApplicationProgress, UpdateSourceTrigger=PropertyChanged}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:CallMethodAction TargetObject="{Binding}" MethodName="SaveAsMenuItemClicked" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <MenuItem Header="Save With Results As..."
                  IsEnabled="{Binding IsThereAnyApplicationProgress, UpdateSourceTrigger=PropertyChanged}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:CallMethodAction TargetObject="{Binding}" MethodName="SaveWithResultsAsMenuItemClicked" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <Separator />
        <MenuItem Header="Settings">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:InvokeCommandAction Command="{Binding ShowTabCommand}"
                                     CommandParameter="{Binding SettingsTabViewModel}" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <Separator />
        <MenuItem Margin="{StaticResource MenuItemBottomMargin}" Header="Exit" Click="ExitMenuItemClicked" />
      </MenuItem>

      <MenuItem Header="Solution" Style="{StaticResource MenuBarItem}">
        <MenuItem Margin="{StaticResource MenuItemTopMargin}" Header="Calculate">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:CallMethodAction TargetObject="{Binding}" MethodName="CalculateButtonClicked" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <Separator />
        <MenuItem Margin="{StaticResource MenuItemBottomMargin}" Header="Preserve Kendall's Coefficient"
                  IsCheckable="True"
                  IsChecked="{Binding PreserveKendallCoefficient, UpdateSourceTrigger=PropertyChanged}" />
      </MenuItem>

      <MenuItem Name="ShowMenu" Header="Show" Style="{StaticResource MenuBarItem}">
        <MenuItem Margin="{StaticResource MenuItemTopMargin}" Header="Criteria">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:InvokeCommandAction Command="{Binding ShowTabCommand}"
                                     CommandParameter="{Binding CriteriaTabViewModel}" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <MenuItem Header="Alternatives">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:InvokeCommandAction Command="{Binding ShowTabCommand}"
                                     CommandParameter="{Binding AlternativesTabViewModel}" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <MenuItem Header="Reference Ranking">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:InvokeCommandAction Command="{Binding ShowTabCommand}"
                                     CommandParameter="{Binding ReferenceRankingTabViewModel}" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <MenuItem Margin="{StaticResource MenuItemBottomMargin}" Header="Welcome!">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <i:InvokeCommandAction Command="{Binding ShowTabCommand}"
                                     CommandParameter="{Binding WelcomeTabViewModel}" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
      </MenuItem>

      <MenuItem Header="View" Style="{StaticResource MenuBarItem}">
        <MenuItem Margin="{StaticResource MenuItemTopMargin}" Header="Topbar" IsCheckable="True" IsChecked="True"
                  Click="MenuBarTopbarViewToggled" />
        <MenuItem Header="Instance Panel" IsCheckable="True" IsChecked="True" Click="MenuBarPanelViewToggled" />
        <MenuItem Margin="{StaticResource MenuItemBottomMargin}" Header="Ranking Panel" IsCheckable="True"
                  IsChecked="True" Click="MenuBarPanelViewToggled" />
      </MenuItem>

      <MenuItem Header="Help" Style="{StaticResource MenuBarItem}">
        <MenuItem Margin="{StaticResource MenuItemTopMargin}" Header="Documentation" Click="ShowDocumentation" />
        <MenuItem Margin="{StaticResource MenuItemBottomMargin}" Header="About" Click="ShowAboutDialog" />
      </MenuItem>
    </Menu>


    <!--main view-->
    <Grid Name="MainViewGrid" Grid.Row="1">
      <Grid.Resources>
        <GridLength x:Key="LeftPanelWidth">192</GridLength>
        <sys:Double x:Key="LeftPanelMinWidth">130</sys:Double>
        <GridLength x:Key="RightPanelWidth">290</GridLength>
        <sys:Double x:Key="RightPanelMinWidth">180</sys:Double>
      </Grid.Resources>

      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource LeftPanelWidth}" MinWidth="{StaticResource LeftPanelMinWidth}" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="{StaticResource RightPanelWidth}" MinWidth="{StaticResource RightPanelMinWidth}" />
      </Grid.ColumnDefinitions>

      <!--topbar-->
      <Border Height="36" Grid.ColumnSpan="5" Background="{StaticResource ColorInterface4}" BorderThickness="0,0,0,1"
              BorderBrush="{StaticResource ColorBorders1}" Padding="12,0,12,0">
        <DockPanel Height="28" LastChildFill="False">
          <Button Content="Calculate" Style="{StaticResource PrimaryRoundButton}" DockPanel.Dock="Left"
                  FontSize="{StaticResource CommonFontSize1}" Margin="0,0,8,0" Padding="20,0,20,1">
            <i:Interaction.Triggers>
              <i:EventTrigger EventName="Click">
                <i:CallMethodAction TargetObject="{Binding}" MethodName="CalculateButtonClicked" />
              </i:EventTrigger>
            </i:Interaction.Triggers>
          </Button>

          <Rectangle Focusable="False" Margin="0,0,8,0" Width="1" Fill="{StaticResource ColorSeparator}"
                     DockPanel.Dock="Left" />

          <Button Content="Criteria" Style="{StaticResource SecondaryRoundButton}"
                  FontSize="{StaticResource CommonFontSize1}" DockPanel.Dock="Left" Margin="0,0,8,0"
                  Padding="16,0,16,1">
            <i:Interaction.Triggers>
              <i:EventTrigger EventName="Click">
                <i:InvokeCommandAction Command="{Binding ShowTabCommand}"
                                       CommandParameter="{Binding CriteriaTabViewModel}" />
              </i:EventTrigger>
            </i:Interaction.Triggers>
          </Button>

          <Button Content="Alternatives" Style="{StaticResource SecondaryRoundButton}"
                  FontSize="{StaticResource CommonFontSize1}" DockPanel.Dock="Left" Margin="0,0,8,0"
                  Padding="16,0,16,1">
            <i:Interaction.Triggers>
              <i:EventTrigger EventName="Click">
                <i:InvokeCommandAction Command="{Binding ShowTabCommand}"
                                       CommandParameter="{Binding AlternativesTabViewModel}" />
              </i:EventTrigger>
            </i:Interaction.Triggers>
          </Button>

          <Button Content="Reference Ranking" Style="{StaticResource SecondaryRoundButton}"
                  FontSize="{StaticResource CommonFontSize1}" DockPanel.Dock="Left" Margin="0,0,8,0"
                  Padding="16,0,16,1">
            <i:Interaction.Triggers>
              <i:EventTrigger EventName="Click">
                <i:InvokeCommandAction Command="{Binding ShowTabCommand}"
                                       CommandParameter="{Binding ReferenceRankingTabViewModel}" />
              </i:EventTrigger>
            </i:Interaction.Triggers>
          </Button>

          <Rectangle Focusable="False" Margin="0,0,8,0" Width="1" Fill="{StaticResource ColorSeparator}"
                     DockPanel.Dock="Left" />

          <CheckBox Margin="0,0,8,0"
                    IsChecked="{Binding PreserveKendallCoefficient, UpdateSourceTrigger=PropertyChanged}">
            <TextBlock Text="Preserve Kendall's Coefficient" FontSize="{StaticResource CommonFontSize2}" />
          </CheckBox>

          <Button Content="Settings" Style="{StaticResource SecondaryRoundButton}" Margin="0" Padding="16,0,16,1"
                  DockPanel.Dock="Right" FontSize="{StaticResource CommonFontSize1}">
            <i:Interaction.Triggers>
              <i:EventTrigger EventName="Click">
                <i:InvokeCommandAction Command="{Binding ShowTabCommand}"
                                       CommandParameter="{Binding SettingsTabViewModel}" />
              </i:EventTrigger>
            </i:Interaction.Triggers>
          </Button>
        </DockPanel>
      </Border>


      <!--left panel (alternatives and criteria)-->
      <Border Grid.Row="1" Grid.Column="0" Background="{StaticResource ColorInterface6}" BorderThickness="0,0,1,0"
              BorderBrush="{StaticResource ColorBorders1}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="24" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <TextBlock Text="Instance" VerticalAlignment="Center" Margin="12,0,0,2"
                     FontSize="{StaticResource CommonFontSize1}" />

          <Grid Grid.Row="1">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.Resources>
              <ControlTemplate x:Key="LeftPanelListViewItemTemplateButtonTemplate" TargetType="{x:Type ButtonBase}">
                <Border x:Name="Border" BorderThickness="0,0,0,1" BorderBrush="{StaticResource ColorInterface3}"
                        Background="Transparent">
                  <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                </Border>

                <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface6Hover}" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>

              <Style TargetType="{x:Type ListView}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
              </Style>

              <Style x:Key="LeftPanelListViewItemBaseStyle" TargetType="ListViewItem">
                <Setter Property="Margin" Value="0" />
              </Style>
            </Grid.Resources>

            <Expander Name="AlternativesExpander" Header="Alternatives"
                      Expanded="Expander_Toggled" Collapsed="Expander_Toggled"
                      HeaderTemplate="{StaticResource ExpanderWithPlusButtonHeaderTemplate}" IsExpanded="True">
              <Expander.Resources>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource LeftPanelListViewItemBaseStyle}">
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Button Template="{StaticResource LeftPanelListViewItemTemplateButtonTemplate}"
                                Style="{x:Null}" Click="InstancePanelListItemClicked" Padding="0">
                          <ContentPresenter Margin="12,4,8,4" ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Content="{TemplateBinding Content}" />
                        </Button>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Expander.Resources>

              <ListView Name="AlternativesListView"
                        ItemsSource="{Binding Alternatives.AlternativesCollection, UpdateSourceTrigger=PropertyChanged}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListView.ItemTemplate>
                  <DataTemplate>
                    <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                  </DataTemplate>
                </ListView.ItemTemplate>
              </ListView>
            </Expander>

            <Expander Name="CriteriaExpander" Header="Criteria" Grid.Row="1"
                      Collapsed="Expander_Toggled" Expanded="Expander_Toggled"
                      HeaderTemplate="{StaticResource ExpanderWithPlusButtonHeaderTemplate}" IsExpanded="True">
              <Expander.Resources>
                <!--hack solution to change grid header background color-->
                <Style TargetType="{x:Type ScrollViewer}">
                  <Setter Property="Background" Value="{StaticResource ColorInterface5}" />
                </Style>
              </Expander.Resources>

              <ListView Name="CriterionListView"
                        ItemsSource="{Binding Criteria.CriteriaCollection, UpdateSourceTrigger=PropertyChanged}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListView.ItemContainerStyle>
                  <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource LeftPanelListViewItemBaseStyle}">
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                          <Button Template="{StaticResource LeftPanelListViewItemTemplateButtonTemplate}"
                                  Style="{x:Null}" Click="InstancePanelListItemClicked">
                            <GridViewRowPresenter Margin="0,4" Content="{TemplateBinding Content}"
                                                  Columns="{TemplateBinding GridView.ColumnCollection}" />
                          </Button>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </ListView.ItemContainerStyle>

                <ListView.View>
                  <GridView AllowsColumnReorder="False">
                    <GridViewColumn Header="Name" Width="140">
                      <GridViewColumn.HeaderContainerStyle>
                        <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource MetroGridViewColumnHeader}">
                          <Setter Property="Padding" Value="10,0,0,0" />
                        </Style>
                      </GridViewColumn.HeaderContainerStyle>

                      <GridViewColumn.CellTemplate>
                        <DataTemplate>
                          <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Margin="6,0,0,0" />
                        </DataTemplate>
                      </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Type"
                                    DisplayMemberBinding="{Binding CriterionDirection, UpdateSourceTrigger=PropertyChanged}"
                                    Width="9999" />
                  </GridView>
                </ListView.View>
              </ListView>
            </Expander>
          </Grid>
        </Grid>
      </Border>


      <!--GridSplitter enables panel resize-->
      <GridSplitter Name="InstanceTabsGridSplitter" Width="5" Panel.ZIndex="1" Grid.Row="1" Grid.Column="1"
                    HorizontalAlignment="Stretch" Focusable="False" Margin="0,0,-5,0" Background="Transparent" />


      <!--tabs - workspace-->
      <Grid Grid.Row="1" Grid.Column="2" Background="{StaticResource ColorInterface7}">
        <TabControl Name="TabControl" ItemsSource="{Binding Tabs}" BorderThickness="0"
                    SelectionChanged="TabControlSelectionChanged"
                    SizeChanged="TabControlHeaderSizeChanged" LayoutUpdated="TabControlHeaderSizeChanged">
          <TabControl.Template>
            <ControlTemplate TargetType="{x:Type TabControl}">
              <ControlTemplate.Resources>
                <!--arrow buttons template-->
                <ControlTemplate x:Key="ScrollableTabScrollButtonTemplate" TargetType="{x:Type RepeatButton}">
                  <Border x:Name="Border" Width="20" BorderThickness="{TemplateBinding BorderThickness}"
                          BorderBrush="{StaticResource ColorBorders1}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                  </Border>

                  <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface5Hover}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                      <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface5}" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </ControlTemplate.Resources>

              <!--tab control template-->
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="25" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <ScrollViewer Name="TabScrollViewer" HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Disabled" PreviewMouseWheel="Tabs_Scrolled">
                  <ScrollViewer.Template>
                    <ControlTemplate>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="*" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <RepeatButton Name="ScrollLeftButton" Command="ScrollBar.LineLeftCommand"
                                      Template="{StaticResource ScrollableTabScrollButtonTemplate}"
                                      BorderThickness="0,0,1,1" Visibility="Collapsed">
                          <icons:PackIconMaterial Kind="ChevronLeft" Width="10" Height="10"
                                                  Foreground="{StaticResource ColorFontDark}" />
                        </RepeatButton>
                        <ScrollContentPresenter Grid.Column="1" Content="{TemplateBinding ScrollViewer.Content}" />
                        <RepeatButton Name="ScrollRightButton" Grid.Column="2" Command="ScrollBar.LineRightCommand"
                                      Template="{StaticResource ScrollableTabScrollButtonTemplate}"
                                      BorderThickness="1,0,0,1" Visibility="Collapsed" Margin="-1,0,0,0">
                          <icons:PackIconMaterial Kind="ChevronRight" Width="10" Height="10"
                                                  Foreground="{StaticResource ColorFontDark}" />
                        </RepeatButton>
                      </Grid>
                    </ControlTemplate>
                  </ScrollViewer.Template>

                  <DockPanel LastChildFill="True">
                    <StackPanel Name="TabStackPanel" Orientation="Horizontal" IsItemsHost="True" />
                    <Border Name="TabHeadersFiller" Background="{StaticResource ColorInterface5}"
                            BorderBrush="{StaticResource ColorBorders1}" BorderThickness="0,0,0,1" />
                  </DockPanel>
                </ScrollViewer>
                <ContentPresenter x:Name="PART_SelectedContentHost" Grid.Row="1"
                                  Content="{TemplateBinding SelectedContent}"
                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                  ContentSource="SelectedContent" />
              </Grid>
            </ControlTemplate>
          </TabControl.Template>

          <!--content of available tabs-->
          <TabControl.Resources>
            <DataTemplate DataType="{x:Type viewModels:CriteriaTabViewModel}">
              <views:CriteriaTab />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:AlternativesTabViewModel}">
              <views:AlternativesTab />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:ReferenceRankingTabViewModel}">
              <views:ReferenceRankingTab />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:ChartTabViewModel}">
              <views:ChartTab />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:SettingsTabViewModel}">
              <views:SettingsTab />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:WelcomeTabViewModel}">
              <views:WelcomeTab />
            </DataTemplate>
          </TabControl.Resources>

          <!--tab header template-->
          <TabControl.ItemTemplate>
            <DataTemplate DataType="{x:Type tabModel:ITab}">
              <DataTemplate.Resources>
                <!--tab header wrapper triggers-->
                <Style TargetType="{x:Type Border}">
                  <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="Background" Value="{StaticResource ColorInterface5Hover}" />
                    </Trigger>
                    <DataTrigger
                      Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}"
                      Value="True">
                      <Setter Property="Background" Value="{StaticResource ColorInterface7}" />
                      <Setter Property="BorderThickness" Value="0,0,1,0" />
                      <Setter Property="Padding" Value="0,0,0,1" />
                    </DataTrigger>
                  </Style.Triggers>
                  <Setter Property="BorderThickness" Value="0,0,1,1" />
                  <Setter Property="Background" Value="{StaticResource ColorInterface5}" />
                </Style>

                <!--close button triggers-->
                <Style TargetType="{x:Type Button}">
                  <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                      <Setter Property="Visibility" Value="Visible" />
                    </Trigger>
                    <DataTrigger
                      Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}"
                      Value="True">
                      <Setter Property="Template" Value="{StaticResource TransparentButtonTemplateInterface7}" />
                    </DataTrigger>
                  </Style.Triggers>
                  <Setter Property="Visibility" Value="Collapsed" />
                  <Setter Property="Template" Value="{StaticResource TransparentButtonTemplateInterface3}" />
                </Style>
              </DataTemplate.Resources>

              <Border Width="200" BorderBrush="{StaticResource ColorBorders1}" Margin="-6,-2">
                <Border.InputBindings>
                  <MouseBinding Gesture="MiddleClick" Command="{Binding CloseCommand}" />
                </Border.InputBindings>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                             FontSize="{StaticResource CommonFontSize2}"
                             Foreground="{StaticResource ColorFontDark}" VerticalAlignment="Center" Margin="8,0,8,1" />
                  <Button Grid.Column="1" DockPanel.Dock="Right" Command="{Binding CloseCommand}" Margin="0,0,4,0">
                    <icons:PackIconMaterial Kind="Close" Width="10" Height="10"
                                            Foreground="{StaticResource ColorFontDark}" />
                  </Button>
                </Grid>
              </Border>
            </DataTemplate>
          </TabControl.ItemTemplate>
        </TabControl>
      </Grid>


      <!--GridSplitter enables panel resize-->
      <GridSplitter Name="TabsRankingsGridSplitter" Width="5" Panel.ZIndex="1" Grid.Row="1" Grid.Column="3"
                    HorizontalAlignment="Stretch" Focusable="False" Margin="-5,0,0,0" Background="Transparent" />


      <!--right panel (final ranking, reference ranking)-->
      <Border Grid.Row="1" Grid.Column="4" Background="{StaticResource ColorInterface6}" BorderThickness="1,0,0,0"
              BorderBrush="{StaticResource ColorBorders1}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="24" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <TextBlock Text="Rankings" VerticalAlignment="Center" Margin="8,0,0,2"
                     FontSize="{StaticResource CommonFontSize1}" />

          <Grid Grid.Row="1">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.Resources>
              <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource MetroListView}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
              </Style>

              <Style TargetType="{x:Type ListViewItem}" x:Key="RightPanelListViewItemStyle">
                <Setter Property="Focusable" Value="False" />
              </Style>
            </Grid.Resources>

            <Expander Name="FinalRankingExpander" Header="Final" Collapsed="Expander_Toggled"
                      Expanded="Expander_Toggled" IsExpanded="False"
                      HeaderTemplate="{StaticResource ExpanderPlainHeaderTemplate}">
              <Expander.Resources>
                <!--hack solution to change grid header background color-->
                <Style TargetType="{x:Type ScrollViewer}">
                  <Setter Property="Background" Value="{StaticResource ColorInterface5}" />
                </Style>

                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource RightPanelListViewItemStyle}">
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Padding="0,2">
                          <GridViewRowPresenter Content="{TemplateBinding Content}"
                                                Columns="{TemplateBinding GridView.ColumnCollection}" />
                        </Border>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Expander.Resources>
              <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                  <TextBlock Text="Kendall Coefficient: " Margin="8,2,0,2" FontSize="{StaticResource CommonFontSize2}" />
                  <TextBlock FontSize="{StaticResource CommonFontSize2}" Margin="0,2">
                    <TextBlock.Style>
                      <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                          <DataTrigger
                            Binding="{Binding Results.KendallCoefficient, UpdateSourceTrigger=PropertyChanged}"
                            Value="{x:Null}">
                            <Setter Property="Text" Value="-" />
                          </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Text"
                                Value="{Binding Results.KendallCoefficient, StringFormat=G10, UpdateSourceTrigger=PropertyChanged}" />
                      </Style>
                    </TextBlock.Style>
                  </TextBlock>
                </StackPanel>
                <ListView
                  ItemsSource="{Binding Results.FinalRanking.FinalRankingCollection, UpdateSourceTrigger=PropertyChanged}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" DockPanel.Dock="Top">
                  <ListView.View>
                    <GridView AllowsColumnReorder="False">
                      <GridViewColumn Header="#" DisplayMemberBinding="{Binding Position}" Width="32" />
                      <GridViewColumn Header="Utility" DisplayMemberBinding="{Binding Utility, StringFormat=F15}"
                                      Width="66" />
                      <GridViewColumn Header="Rank" Width="41"
                                      DisplayMemberBinding="{Binding Alternative.ReferenceRank, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IndexToRankConverter}}" />
                      <GridViewColumn Header="Alternative"
                                      DisplayMemberBinding="{Binding Alternative.Name, UpdateSourceTrigger=PropertyChanged}"
                                      Width="9999" />
                    </GridView>
                  </ListView.View>
                </ListView>
              </DockPanel>
            </Expander>

            <Expander Name="ReferenceRankingExpander" Header="Reference" Grid.Row="1" Collapsed="Expander_Toggled"
                      Expanded="Expander_Toggled" IsExpanded="True"
                      HeaderTemplate="{StaticResource ExpanderPlainHeaderTemplate}">
              <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                <ItemsControl
                  ItemsSource="{Binding ReferenceRanking.RankingsCollection, UpdateSourceTrigger=PropertyChanged}"
                  Focusable="False"
                  AlternationCount="100000">
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <ItemsControl ItemsSource="{Binding}" Focusable="False">
                        <ItemsControl.Template>
                          <ControlTemplate TargetType="ItemsControl">
                            <StackPanel Margin="12,0,12,10">
                              <Border BorderThickness="0,0,0,1" BorderBrush="{StaticResource ColorBorders1}">
                                <TextBlock
                                  Text="{Binding 
                                  RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                  Path=TemplatedParent.(ItemsControl.AlternationIndex),
                                  StringFormat=Rank {0},
                                  Converter={StaticResource IndexToRankConverter}}"
                                  Margin="4,0,4,2" FontSize="{StaticResource CommonFontSize2}" />
                              </Border>
                              <ItemsPresenter />
                            </StackPanel>
                          </ControlTemplate>
                        </ItemsControl.Template>

                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Margin="4,2,0,2" />
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </ScrollViewer>

            </Expander>
          </Grid>
        </Grid>
      </Border>
    </Grid>
  </Grid>
</controls:MetroWindow>